`timescale 1ns/1ns
module boundary_tb();
parameter N = 21 ;
parameter M = 13 ;
reg clk, rstn;
reg [M-1:0] rI, rE;			// 512  取小數點後4bit
reg [N-1:0] rI_shift;
reg
wire [N-1:0] tau;

//assign rI_shift = tb.td.rI_shift;
//assign tau_reg = tb.td.tau_reg;

boundary_cal #(.N(N), .M(M))
				bc(.rI(rI), 
					.rE(rE), 
					.xc(xc), 
					.yc(yc), 
					.theta(theta), 
					.phi(phi), 
					.alpha(alpha), 
					.xb(xb), 
					.yb(yb), 
					.clk(clk), 
					.rst(rst));
				

always#10 clk = ~clk;
initial
begin
	rI <= 'd210;
	data_rdy <= 1'b1;
	rstn <= 1'b0 ;
	#8 ;
	rI_shift = {rI,8'b0};
	rstn = 1'b1 ;
	clk <= 1'b0;
	rE <= 'd400;
	forever
	begin
	#100
	if(res_rdy == 1'b1)
		$stop;
	end
end

endmodule